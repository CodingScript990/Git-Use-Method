Git 핵심 쏙쏙

[3주차]

✔ 코드리뷰로 피드백주기

 - code review는 PR한 내역에서 댓글을 달면서 리뷰를 남기는 방식을 많이 사용한다.

				[code review]

	🔴					  🔴
      (issue)				       (Review)
	
	↓ [Fork]

	🔴	    →		🔴	    →   ↓ ↑   →    🔴
     (commits)		       (PR)			     (Merge)
						  🔴
					   (Revise Commits)


 - code review하는 이유?
  1. 코드의 품질을 높일 수 있다.
  2. 다른 사람의 눈으로 버그를 빠르게 발견할 수 있다.
  3. 서로의 지식을 나누면서, 더 나은 방법을 찾아낼 수 있다.
  -> 내가 만든 코드가 아니라 팀의 코드의 품질을 높인다.

 - 이런 코드 리뷰문화를 소개하는 것은 개발팀의 문화를 보여주고, 사용자에게 닿는 프로덕트 즉, 코드의
  퀄리티를 높이면서, 개선해나가고 있다는 것을 알리는 것입니다.
 - 조직마다 코드 리뷰하는 스타일이나 분위기가 조금씩 다르다. 모여서 한 자리에서 라이브로 리뷰하는 곳
  도 있다.

✔ Github 이용한 코드 리뷰

 - Git과 Github을 사용하게되면 서로 피드백을 주고 받으면서 코드리뷰하는 것이 간단해진다.
 - 각자의 작업공간이 분리되어 있어서 코드 리뷰 후 수정도 쉽다.
 - Gihub PR페이지를 통해 댓글로 리뷰를 주고 받을 수 도 있다.

				[Github Code Review]

	→→→→→→→→→→→→→→→→→→→→→→  🔴 (main branch << Merge)
						↗
					     ↗
	→→ 🔴 →→→→→→ 🔴 →→→→→→
          (cmit01)   ↑   (cmit02)	↓

		   [PR01]	      [PR02]
                1. 기능 추가	   1. 최종본
				   2. Merge
 - PR후 다시 추가하고 그리고 최종적으로 PR관리자에게 승인받은 뒤에 코드리뷰 권한을 가진 관리자만
  코드를 리뷰할 권한이 있다.