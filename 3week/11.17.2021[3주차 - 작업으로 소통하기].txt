Git 핵심 쏙쏙

[3주차]

✔ 작업으로 의사소통

 - commit으로 소통(메시지, 단위)
 1. commit메시지도 작성하는 규칙이 있다. 각 조직마다 commit 메시지 컨벤션이 있다. 프로그래밍 세계에
  서 서로 조직에서 합의한 규칙을 convention이러고 부른다.
 2. commit 메시지를 어떻게 작성해야하는지 정한 것이다.(규칙!)
 3. commit하면 다른 사람이 알기 쉽게 실제 개발 환경에서 기능을 구현하기 위해서 하나의 commit에 여러
  파일이 들어간다. 만약 파일명만 적어둔다면 코드를 하나하나 읽어야 하는 사태가 벌어진다. 그러지 않
  기 위해서 commit 메시지를 적는 것이다. 하나의 약속!

				[convention 중요성]

	→→→→→→→→→→→→→→→→→→ [main branch]
			↗ PR
	→→ 🔴	→→ 🔴 →→→→→→→→ 🟥 [PR Reject!]
 	1. A파일 추가
		  2. B파일 업데이트	 ↓
 					 ↓
				PR담당자 : 어떤 작업 하신거에요?
				개발자 : .......;;

 - commit단위도 중요하단점! commit의 단위는 내가 기록하는 작업의 단위이다. 스타일마다 틀릴 수 있지만
  commit단위에는 일관된 규칙이 있는게 좋다. 또 나중에 버그를 찾기 위해서 작업 기록을 볼 때 단위가
  잘 나누어져 있으면 금방 찾기 쉽기 때문이다.
 - 즉, 가장 작게 쪼갠다면 기능 단위로 commit해서 웹사이트를 개발할때, 메뉴바를 개발하고 commit, 카카
  오 로그인 기능을 개발하고 commit하는 식이다.
 - 아니면 issue 단위로 commit을 할 수 도 있다!
 - 좋은 commit메시지, 단위로 작성하게 되면 어떤 작업을 했는지 commit history만 봐도 알 수 있고, 
  버그를 찾을 때도 코드를 고치기 쉽고, 다른 사람이 코드를 리뷰할 때 편하단 점!
 